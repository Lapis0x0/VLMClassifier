name: Build and Release

on:
  push:
    tags:
      - 'v*' # 当推送以v开头的标签时触发，例如v1.0.0

# 添加必要的权限
permissions:
  contents: write

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build macOS app
        run: |
          python build.py

      - name: Create DMG
        run: |
          # 创建临时目录
          mkdir -p dist/dmg
          # 复制应用到临时目录
          cp -r dist/VLMClassifier.app dist/dmg/
          # 创建指向应用程序文件夹的符号链接
          ln -s /Applications dist/dmg/Applications
          # 创建DMG文件
          hdiutil create -volname "VLMClassifier" -srcfolder dist/dmg -ov -format UDZO dist/VLMClassifier.dmg

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-app
          path: dist/VLMClassifier.dmg

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Windows executable
        run: |
          python build.py

      - name: Create Windows installer
        run: |
          # 将可执行文件重命名为带版本号的文件名
          $tag = "${{ github.ref_name }}"
          Rename-Item -Path "dist\VLMClassifier.exe" -NewName "VLMClassifier-$tag-win64.exe"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-app
          path: dist/VLMClassifier-*.exe



  create-release:
    needs: [build-macos, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Display structure of downloaded files
        run: ls -R

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            macos-app/VLMClassifier.dmg
            windows-app/VLMClassifier-*.exe
          draft: false
          prerelease: false
          # 使用标签消息作为发布说明，而不是自动生成
